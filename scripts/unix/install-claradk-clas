#!/usr/bin/env bash
# author Vardan Gyurjyan
# date 10.28.16

if ! [ -n "$CLARA_HOME" ]; then
    echo "CLARA_HOME is not defined. Exiting..."
    exit
fi

    case "$1" in
      -u | --update)
	  rm -rf $CLARA_HOME
	  ;;
	esac

command_exists () {
    type "$1" &> /dev/null ;
}

if ! command_exists git ; then
echo "Can not run git. Exiting..."
exit
fi

rm -rf clara-work

echo "Creating clara working directory ..."
mkdir clara-work
cd clara-work

echo "Downloading and building xMsg package ..."
git clone --depth 1 https://github.com/JeffersonLab/xmsg-java.git
cd xmsg-java
./gradlew install

cd ..
echo "Downloading and building clara-java package ..."
git clone --depth 1 https://github.com/JeffersonLab/clara-java.git
cd clara-java
./gradlew install
./gradlew deploy

cd ..
echo "Downloading and building clasrec-io package ..."
git clone --depth 1 https://github.com/JeffersonLab/clasrec-io.git
cd clasrec-io
./gradlew deploy

cd ..
echo "Downloading and building clasrec-orchestrators package ..."
git clone --depth 1 https://github.com/JeffersonLab/clasrec-orchestrators.git
cd clasrec-orchestrators
./gradlew deploy

cd ..
echo "Downloading and building jinflux package ..."
git clone --depth 1 https://github.com/JeffersonLab/JinFlux.git
cd JinFlux
./gradlew deploy

cd ..
echo "Downloading coat-java and jre packages ..."
mkdir $CLARA_HOME/jre

OS="`uname`"
case $OS in
  'Linux')
  wget https://userweb.jlab.org/~gavalian/software/coatjava/coatjava-3.0.tar.gz
      MACHINE_TYPE=`uname -m`
      if [ ${MACHINE_TYPE} == 'x86_64' ]; then
    wget https://userweb.jlab.org/~gurjyan/clara-cre/linux-64.tar.gz
    mv linux-64.tar.gz $CLARA_HOME/jre
  else
     wget https://userweb.jlab.org/~gurjyan/clara-cre/linux-i586.tar.gz
    mv linux-i586.tar.gz $CLARA_HOME/jre
  fi
    ;;
#  'WindowsNT')
#    OS='Windows'
#    ;;
  'Darwin')
 curl "https://userweb.jlab.org/~gavalian/software/coatjava/coatjava-3.0.tar.gz" -o coatjava-3.0.tar.gz
 curl "https://userweb.jlab.org/~gurjyan/clara-cre/macosx-64.tar.gz" -o macosx-64.tar.gz
    mv macosx-64.tar.gz $CLARA_HOME/jre
    ;;
  *) ;;
esac

tar xvzf coatjava-3.0.tar.gz

cd coatjava
cp lib/clas/* $CLARA_HOME/plugins/clas12/lib/.
cp lib/plugins/* $CLARA_HOME/plugins/clas12/services/.
cp -r etc $CLARA_HOME/plugins/clas12/.
cp -r bin $CLARA_HOME/plugins/clas12/.
cp -r scripts $CLARA_HOME/plugins/clas12/.
rm -f $CLARA_HOME/plugins/clas12/bin/clara-rec
cp $CLARA_HOME/plugins/clas12/etc/services/reconstruction.yaml $CLARA_HOME/plugins/clas12/config/services.yaml
rm -rf $CLARA_HOME/plugins/clas12/etc/services

mkdir $CLARA_HOME/data
mkdir $CLARA_HOME/data/in
mkdir $CLARA_HOME/data/out

hash -r
cp ../clasrec-io/data/gemcOut_header.evio $CLARA_HOME/data/in/

echo "Installing jre ..."
cd $CLARA_HOME/jre
tar xvzf *.tar.*

echo done