/*
 * Copyright (C) 2015. Jefferson Lab, CLARA framework (JLAB). All Rights Reserved.
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for educational, research, and not-for-profit purposes,
 * without fee and without a signed licensing agreement.
 *
 * Contact Vardan Gyurjyan
 * Department of Experimental Nuclear Physics, Jefferson Lab.
 *
 * IN NO EVENT SHALL JLAB BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL,
 * INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF
 * THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF JLAB HAS BEEN ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * JLAB SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE. THE CLARA SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY, PROVIDED
 * HEREUNDER IS PROVIDED "AS IS". JLAB HAS NO OBLIGATION TO PROVIDE MAINTENANCE,
 * SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 */

package org.jlab.clara.claraol.impl;


import java.util.Collection;

import org.jlab.clara.claraol.DataSource;
import org.jlab.clara.claraol.ServiceConfig;
import org.jlab.clara.claraol.Vocabulary;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultServiceConfig <br>
 * @version generated on Tue Dec 22 14:51:01 EST 2015 by gurjyan
 */
public class DefaultServiceConfig extends WrappedIndividualImpl implements ServiceConfig {

    public DefaultServiceConfig(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasData
     */
     
    public Collection<? extends DataSource> getHasData() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASDATA,
                                               DefaultDataSource.class);
    }

    public boolean hasHasData() {
	   return !getHasData().isEmpty();
    }

    public void addHasData(DataSource newHasData) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASDATA,
                                       newHasData);
    }

    public void removeHasData(DataSource oldHasData) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASDATA,
                                          oldHasData);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#broadcastDone
     */
     
    public Collection<? extends Boolean> getBroadcastDone() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BROADCASTDONE, Boolean.class);
    }

    public boolean hasBroadcastDone() {
		return !getBroadcastDone().isEmpty();
    }

    public void addBroadcastDone(Boolean newBroadcastDone) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BROADCASTDONE, newBroadcastDone);
    }

    public void removeBroadcastDone(Boolean oldBroadcastDone) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BROADCASTDONE, oldBroadcastDone);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#broadcastError
     */
     
    public Collection<? extends Boolean> getBroadcastError() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BROADCASTERROR, Boolean.class);
    }

    public boolean hasBroadcastError() {
		return !getBroadcastError().isEmpty();
    }

    public void addBroadcastError(Boolean newBroadcastError) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BROADCASTERROR, newBroadcastError);
    }

    public void removeBroadcastError(Boolean oldBroadcastError) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BROADCASTERROR, oldBroadcastError);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#broadcastWarning
     */
     
    public Collection<? extends Boolean> getBroadcastWarning() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BROADCASTWARNING, Boolean.class);
    }

    public boolean hasBroadcastWarning() {
		return !getBroadcastWarning().isEmpty();
    }

    public void addBroadcastWarning(Boolean newBroadcastWarning) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BROADCASTWARNING, newBroadcastWarning);
    }

    public void removeBroadcastWarning(Boolean oldBroadcastWarning) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_BROADCASTWARNING, oldBroadcastWarning);
    }


}
