/*
 * Copyright (C) 2015. Jefferson Lab, CLARA framework (JLAB). All Rights Reserved.
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for educational, research, and not-for-profit purposes,
 * without fee and without a signed licensing agreement.
 *
 * Contact Vardan Gyurjyan
 * Department of Experimental Nuclear Physics, Jefferson Lab.
 *
 * IN NO EVENT SHALL JLAB BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL,
 * INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF
 * THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF JLAB HAS BEEN ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * JLAB SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE. THE CLARA SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY, PROVIDED
 * HEREUNDER IS PROVIDED "AS IS". JLAB HAS NO OBLIGATION TO PROVIDE MAINTENANCE,
 * SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 */

package org.jlab.clara.claraol.impl;


import java.util.Collection;

import org.jlab.clara.claraol.*;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultOrchestrator <br>
 * @version generated on Tue Dec 22 14:51:01 EST 2015 by gurjyan
 */
public class DefaultOrchestrator extends WrappedIndividualImpl implements Orchestrator {

    public DefaultOrchestrator(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#actsOnError
     */
     
    public Collection<? extends Action> getActsOnError() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ACTSONERROR,
                                               DefaultAction.class);
    }

    public boolean hasActsOnError() {
	   return !getActsOnError().isEmpty();
    }

    public void addActsOnError(Action newActsOnError) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ACTSONERROR,
                                       newActsOnError);
    }

    public void removeActsOnError(Action oldActsOnError) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ACTSONERROR,
                                          oldActsOnError);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#actsOnWarning
     */
     
    public Collection<? extends Action> getActsOnWarning() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_ACTSONWARNING,
                                               DefaultAction.class);
    }

    public boolean hasActsOnWarning() {
	   return !getActsOnWarning().isEmpty();
    }

    public void addActsOnWarning(Action newActsOnWarning) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_ACTSONWARNING,
                                       newActsOnWarning);
    }

    public void removeActsOnWarning(Action oldActsOnWarning) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_ACTSONWARNING,
                                          oldActsOnWarning);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#processes
     */
     
    public Collection<? extends DataSet> getProcesses() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_PROCESSES,
                                               DefaultDataSet.class);
    }

    public boolean hasProcesses() {
	   return !getProcesses().isEmpty();
    }

    public void addProcesses(DataSet newProcesses) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_PROCESSES,
                                       newProcesses);
    }

    public void removeProcesses(DataSet oldProcesses) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_PROCESSES,
                                          oldProcesses);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#runs
     */
     
    public Collection<? extends Application> getRuns() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_RUNS,
                                               DefaultApplication.class);
    }

    public boolean hasRuns() {
	   return !getRuns().isEmpty();
    }

    public void addRuns(Application newRuns) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_RUNS,
                                       newRuns);
    }

    public void removeRuns(Application oldRuns) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_RUNS,
                                          oldRuns);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#monitorsError
     */
     
    public Collection<? extends Boolean> getMonitorsError() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MONITORSERROR, Boolean.class);
    }

    public boolean hasMonitorsError() {
		return !getMonitorsError().isEmpty();
    }

    public void addMonitorsError(Boolean newMonitorsError) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MONITORSERROR, newMonitorsError);
    }

    public void removeMonitorsError(Boolean oldMonitorsError) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MONITORSERROR, oldMonitorsError);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#monitorsInfo
     */
     
    public Collection<? extends Boolean> getMonitorsInfo() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MONITORSINFO, Boolean.class);
    }

    public boolean hasMonitorsInfo() {
		return !getMonitorsInfo().isEmpty();
    }

    public void addMonitorsInfo(Boolean newMonitorsInfo) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MONITORSINFO, newMonitorsInfo);
    }

    public void removeMonitorsInfo(Boolean oldMonitorsInfo) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MONITORSINFO, oldMonitorsInfo);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#monitorsWarning
     */
     
    public Collection<? extends Boolean> getMonitorsWarning() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MONITORSWARNING, Boolean.class);
    }

    public boolean hasMonitorsWarning() {
		return !getMonitorsWarning().isEmpty();
    }

    public void addMonitorsWarning(Boolean newMonitorsWarning) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MONITORSWARNING, newMonitorsWarning);
    }

    public void removeMonitorsWarning(Boolean oldMonitorsWarning) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_MONITORSWARNING, oldMonitorsWarning);
    }


}
