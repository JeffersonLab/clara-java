/*
 *   Copyright (c) 2016.  Jefferson Lab (JLab). All rights reserved. Permission
 *   to use, copy, modify, and distribute  this software and its documentation for
 *   educational, research, and not-for-profit purposes, without fee and without a
 *   signed licensing agreement.
 *
 *   IN NO EVENT SHALL JLAB BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL
 *   INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING
 *   OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF JLAB HAS
 *   BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *   JLAB SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 *   THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 *   PURPOSE. THE CLARA SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY,
 *   PROVIDED HEREUNDER IS PROVIDED "AS IS". JLAB HAS NO OBLIGATION TO PROVIDE
 *   MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 *
 *   This software was developed under the United States Government license.
 *   For more information contact author at gurjyan@jlab.org
 *   Department of Experimental Nuclear Physics, Jefferson Lab.
 */

package org.jlab.clara.claraol.impl;


import org.jlab.clara.claraol.DataSet;
import org.jlab.clara.claraol.DataSource;
import org.jlab.clara.claraol.Vocabulary;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.semanticweb.owlapi.model.IRI;

import java.util.Collection;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultDataSet <br>
 * @version generated on Sat Jan 30 17:43:59 EST 2016 by gurjyan
 */
public class DefaultDataSet extends WrappedIndividualImpl implements DataSet {

    public DefaultDataSet(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasInputSource
     */
     
    public Collection<? extends DataSource> getHasInputSource() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASINPUTSOURCE,
                                               DefaultDataSource.class);
    }

    public boolean hasHasInputSource() {
	   return !getHasInputSource().isEmpty();
    }

    public void addHasInputSource(DataSource newHasInputSource) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASINPUTSOURCE,
                                       newHasInputSource);
    }

    public void removeHasInputSource(DataSource oldHasInputSource) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASINPUTSOURCE,
                                          oldHasInputSource);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasOutputSource
     */
     
    public Collection<? extends DataSource> getHasOutputSource() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASOUTPUTSOURCE,
                                               DefaultDataSource.class);
    }

    public boolean hasHasOutputSource() {
	   return !getHasOutputSource().isEmpty();
    }

    public void addHasOutputSource(DataSource newHasOutputSource) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASOUTPUTSOURCE,
                                       newHasOutputSource);
    }

    public void removeHasOutputSource(DataSource oldHasOutputSource) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASOUTPUTSOURCE,
                                          oldHasOutputSource);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#outputFilePrefix
     */
     
    public Collection<? extends String> getOutputFilePrefix() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILEPREFIX, String.class);
    }

    public boolean hasOutputFilePrefix() {
		return !getOutputFilePrefix().isEmpty();
    }

    public void addOutputFilePrefix(String newOutputFilePrefix) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILEPREFIX, newOutputFilePrefix);
    }

    public void removeOutputFilePrefix(String oldOutputFilePrefix) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILEPREFIX, oldOutputFilePrefix);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#outputFileSuffix
     */
     
    public Collection<? extends String> getOutputFileSuffix() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILESUFFIX, String.class);
    }

    public boolean hasOutputFileSuffix() {
		return !getOutputFileSuffix().isEmpty();
    }

    public void addOutputFileSuffix(String newOutputFileSuffix) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILESUFFIX, newOutputFileSuffix);
    }

    public void removeOutputFileSuffix(String oldOutputFileSuffix) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILESUFFIX, oldOutputFileSuffix);
    }


}
