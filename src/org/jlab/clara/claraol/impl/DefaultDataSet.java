package claraol.impl;

import claraol.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultDataSet <br>
 * @version generated on Sat Jan 30 12:43:23 EST 2016 by gurjyan
 */
public class DefaultDataSet extends WrappedIndividualImpl implements DataSet {

    public DefaultDataSet(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasInputSource
     */
     
    public Collection<? extends DataSource> getHasInputSource() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASINPUTSOURCE,
                                               DefaultDataSource.class);
    }

    public boolean hasHasInputSource() {
	   return !getHasInputSource().isEmpty();
    }

    public void addHasInputSource(DataSource newHasInputSource) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASINPUTSOURCE,
                                       newHasInputSource);
    }

    public void removeHasInputSource(DataSource oldHasInputSource) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASINPUTSOURCE,
                                          oldHasInputSource);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasOutputSource
     */
     
    public Collection<? extends DataSource> getHasOutputSource() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASOUTPUTSOURCE,
                                               DefaultDataSource.class);
    }

    public boolean hasHasOutputSource() {
	   return !getHasOutputSource().isEmpty();
    }

    public void addHasOutputSource(DataSource newHasOutputSource) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASOUTPUTSOURCE,
                                       newHasOutputSource);
    }

    public void removeHasOutputSource(DataSource oldHasOutputSource) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASOUTPUTSOURCE,
                                          oldHasOutputSource);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#outputFilePrefix
     */
     
    public Collection<? extends String> getOutputFilePrefix() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILEPREFIX, String.class);
    }

    public boolean hasOutputFilePrefix() {
		return !getOutputFilePrefix().isEmpty();
    }

    public void addOutputFilePrefix(String newOutputFilePrefix) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILEPREFIX, newOutputFilePrefix);
    }

    public void removeOutputFilePrefix(String oldOutputFilePrefix) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILEPREFIX, oldOutputFilePrefix);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#outputFileSuffix
     */
     
    public Collection<? extends String> getOutputFileSuffix() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILESUFFIX, String.class);
    }

    public boolean hasOutputFileSuffix() {
		return !getOutputFileSuffix().isEmpty();
    }

    public void addOutputFileSuffix(String newOutputFileSuffix) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILESUFFIX, newOutputFileSuffix);
    }

    public void removeOutputFileSuffix(String oldOutputFileSuffix) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OUTPUTFILESUFFIX, oldOutputFileSuffix);
    }


}
