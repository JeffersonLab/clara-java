/*
 * Copyright (C) 2015. Jefferson Lab, CLARA framework (JLAB). All Rights Reserved.
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for educational, research, and not-for-profit purposes,
 * without fee and without a signed licensing agreement.
 *
 * Contact Vardan Gyurjyan
 * Department of Experimental Nuclear Physics, Jefferson Lab.
 *
 * IN NO EVENT SHALL JLAB BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL,
 * INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF
 * THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF JLAB HAS BEEN ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * JLAB SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE. THE CLARA SOFTWARE AND ACCOMPANYING DOCUMENTATION, IF ANY, PROVIDED
 * HEREUNDER IS PROVIDED "AS IS". JLAB HAS NO OBLIGATION TO PROVIDE MAINTENANCE,
 * SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 */

package org.jlab.clara.claraol.impl;


import java.util.Collection;

import org.jlab.clara.claraol.*;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultApplication <br>
 * @version generated on Tue Dec 22 14:51:01 EST 2015 by gurjyan
 */
public class DefaultApplication extends WrappedIndividualImpl implements Application {

    public DefaultApplication(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasEventSink
     */
     
    public Collection<? extends Service> getHasEventSink() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASEVENTSINK,
                                               DefaultService.class);
    }

    public boolean hasHasEventSink() {
	   return !getHasEventSink().isEmpty();
    }

    public void addHasEventSink(Service newHasEventSink) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASEVENTSINK,
                                       newHasEventSink);
    }

    public void removeHasEventSink(Service oldHasEventSink) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASEVENTSINK,
                                          oldHasEventSink);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasEventSource
     */
     
    public Collection<? extends Service> getHasEventSource() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASEVENTSOURCE,
                                               DefaultService.class);
    }

    public boolean hasHasEventSource() {
	   return !getHasEventSource().isEmpty();
    }

    public void addHasEventSource(Service newHasEventSource) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASEVENTSOURCE,
                                       newHasEventSource);
    }

    public void removeHasEventSource(Service oldHasEventSource) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASEVENTSOURCE,
                                          oldHasEventSource);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasIdentity
     */
     
    public Collection<? extends Identity> getHasIdentity() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASIDENTITY,
                                               DefaultIdentity.class);
    }

    public boolean hasHasIdentity() {
	   return !getHasIdentity().isEmpty();
    }

    public void addHasIdentity(Identity newHasIdentity) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASIDENTITY,
                                       newHasIdentity);
    }

    public void removeHasIdentity(Identity oldHasIdentity) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASIDENTITY,
                                          oldHasIdentity);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasService
     */
     
    public Collection<? extends State> getHasService() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASSERVICE,
                                               DefaultState.class);
    }

    public boolean hasHasService() {
	   return !getHasService().isEmpty();
    }

    public void addHasService(State newHasService) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASSERVICE,
                                       newHasService);
    }

    public void removeHasService(State oldHasService) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASSERVICE,
                                          oldHasService);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasSkipAction
     */
     
    public Collection<? extends Action> getHasSkipAction() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASSKIPACTION,
                                               DefaultAction.class);
    }

    public boolean hasHasSkipAction() {
	   return !getHasSkipAction().isEmpty();
    }

    public void addHasSkipAction(Action newHasSkipAction) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASSKIPACTION,
                                       newHasSkipAction);
    }

    public void removeHasSkipAction(Action oldHasSkipAction) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASSKIPACTION,
                                          oldHasSkipAction);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasStartAction
     */
     
    public Collection<? extends Action> getHasStartAction() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASSTARTACTION,
                                               DefaultAction.class);
    }

    public boolean hasHasStartAction() {
	   return !getHasStartAction().isEmpty();
    }

    public void addHasStartAction(Action newHasStartAction) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASSTARTACTION,
                                       newHasStartAction);
    }

    public void removeHasStartAction(Action oldHasStartAction) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASSTARTACTION,
                                          oldHasStartAction);
    }


    /* ***************************************************
     * Object Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasStopAction
     */
     
    public Collection<? extends Action> getHasStopAction() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASSTOPACTION,
                                               DefaultAction.class);
    }

    public boolean hasHasStopAction() {
	   return !getHasStopAction().isEmpty();
    }

    public void addHasStopAction(Action newHasStopAction) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASSTOPACTION,
                                       newHasStopAction);
    }

    public void removeHasStopAction(Action oldHasStopAction) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASSTOPACTION,
                                          oldHasStopAction);
    }


    /* ***************************************************
     * Data Property http://claraweb.jlab.org/ontology/2015/11/ClaraOL#hasComposition
     */
     
    public Collection<? extends String> getHasComposition() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASCOMPOSITION, String.class);
    }

    public boolean hasHasComposition() {
		return !getHasComposition().isEmpty();
    }

    public void addHasComposition(String newHasComposition) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASCOMPOSITION, newHasComposition);
    }

    public void removeHasComposition(String oldHasComposition) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASCOMPOSITION, oldHasComposition);
    }


}
